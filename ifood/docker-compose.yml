version: "3.7"
services:
 
 # Banco de dados usado pela aplicacao
 postgres_cadastro:
  container_name: postgres_cadastro_ifood 
  image: postgres:12.2
  environment:
   POSTGRES_USER: cadastro
   POSTGRES_PASSWORD: cadastro
  ports:
   - 5432:5432

 postgres_marketplace:
  container_name: postgres_marketplace_ifood 
  image: postgres:12.2
  environment:
   POSTGRES_USER: marketplace
   POSTGRES_PASSWORD: marketplace
  ports:
   - 5433:5432
 
 # Para geracao do token
 keycloak_ifood:
  container_name: keycloak_ifood
  image: jboss/keycloak:13.0.0
  #environment:
   #KEYCLOAK_USER: admin
   #KEYCLOAK_PASSWORD: admin
  ports:
   - 8180:8080

 # Para monitoramento do servico, tempo de resposta (Tracing)
 jaeger_ifood:
  container_name: jaeger_ifood
  image: jaegertracing/all-in-one:1.22
  ports:
   - 5775:5775/udp
   - 6831:6831/udp
   - 6832:6832/udp
   - 5778:5778
   - 16686:16686
   - 14268:14268
   - 14250:14250
   - 9411:9411

 # Para metricas e vinculacao a uma dashborad (Grafana)
 prometheus_ifood:
  container_name: prometheus_ifood
  image: prometheus-ifood
  ports:
   - 9090:9090

 # Para geracao de dashboards
 grafana_ifood:
  container_name: grafana_ifood
  image: grafana/grafana:6.5.0
  ports:
   - 3000:3000

# Para mensageria, comunicacao entre bancos
 artemis_ifood:
  container_name: artemis_ifood
  image: vromero/activemq-artemis:2.11.0
  #network_mode: "host"
  environment: 
   ARTEMIS_USERNAME: admin
   ARTEMIS_PASSWORD: admin
  ports:
   - "8161:8161"
   - "61616:61616"
   - "5672:5672"

# Para mensageria, comunicacao entre bancos
 mongodb_ifood:
  container_name: mongodb_ifood
  image: mongo:4.2.5-bionic
  #network_mode: "host"
  environment: 
   MONGO_INITDB_ROOT_USERNAME: pedido
   MONGO_INITDB_ROOT_PASSWORD: pedido
   MONGO_INITDB_DATABASE: pedido
  ports:
   - 27017:27017

#Integracao com o banco para o Kafka
 zookeeper:
  container_name: zookeeper_container
  image: debezium/zookeeper:1.1
  ports:
   - 2181:2181
   - 2888:2888
   - 3888:3888

# Kafka 
 kafka:
  container_name: kafka_container
  image: debezium/kafka:1.1
  ports:
   - 9092:9092
  links:
   - zookeeper
  environment:
   - ZOOKEEPER_CONNECT=zookeeper:2181
   #- ADVERTISED_LISTENERS= PLAINTEXT://localhost:9092
#Interface grafica para o kafka   
 kafdrop:
  container_name: kafdrop_container
  image: obsidiandynamics/kafdrop:3.24.0
  environment:
   KAFKA_BROKERCONNECT: kafka:9092
  ports:
   - 9000:9000
  depends_on:
   - kafka

# Ferramenta de busca distribuida
# se der erro de memoria:
#abrir PowerShell
#wsl -d docker-desktop
#sysctl -w vm.max_map_count=262144
 elastic:
  container_name: elasticsearch
  image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
  #network_mode: "host"
  ports:
   - 9200:9200
   - 9300:9300
  environment:
   - node.name=es01
   - cluster.name=es-docker-cluster
   - cluster.initial_master_nodes=es01
   - bootstrap.memory_lock=true
   - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  ulimits:
    memlock:
     soft: -1
     hard: -1

#Ferranmenta para fazer dashborads
 kibana:
  container_name: kibana
  image: docker.elastic.co/kibana/kibana:7.6.2
  ports:
   - 5601:5601
  environment:
    ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ELASTICSEARCH_URL: http://elasticsearch:9300



